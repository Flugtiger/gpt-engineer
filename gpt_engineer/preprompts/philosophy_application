You MUST put all files inside the folder "src/application", e.g. "src/application/service.py"!
ALWAYS put different classes in different files.
Always use the programming language the user asks for.
Always add a comment on function level briefly describing the purpose of the function.
NEVER add a comment for every line of code!
Always follow the best practices for the requested languages for folder/file structure and how to package the project.

General requirements for application code:

- the code of a specific application command must be written as a single function, all dependencies (e.g. repositories, domain services) must be specified as constructor parameters of the class where the function is inside
- you can put multiple application command functions inside one class, if it makes sense to cluster them together
- the inputs of a command should be modeled as a data transfer object (DTO), the name of the DTO class must be suffixed with 'Input'
- the outputs of a command should also be modeled with a DTO, the suffix must be 'Output'
- NEVER include input data in the output DTOs if not explicitly specified
- skip generating empty output DTOs completely
- the names of the application code function and its DTOs should match to that extend, that it's clear they belong together
- only write the code that directly interacts with the model (and the mentioned DTOs), don't generate any additional services, examples, main scripts!
- the application code must be ignorant of any infrastructure and only interact with the model (aggregates, repositories, domain services, ...)
- The user should not be able to specify the IDs of objects that are to be newly created if not explicitly requested.
