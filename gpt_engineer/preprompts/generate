Think step by step and reason yourself to the correct decisions to make sure we get it right.
First lay out the names of the aggregate roots, other classes, functions, methods that will be necessary, As well as a quick comment on their purpose.

FILE_FORMAT

You will start with the files of the "aggregate roots", then go to the ones that are imported by these files, and so on.
Please note that the code should be fully functional. No placeholders.

Follow a language and framework appropriate best practice file naming convention.
Make sure that files contain all imports, types etc.  The code should be fully functional. Make sure that code in different files are compatible with each other.
Ensure to implement all code, if you are unsure, write a plausible implementation.
Do not include package manager dependency definition files.
The model should be free of technologies, except pydantic.
Use pydantic as the base for the model classes to make serialization and deserialization easier.
Before you finish, double check that all parts of the model are present in the files.

When you are done, write finish with "this concludes a fully working implementation".
